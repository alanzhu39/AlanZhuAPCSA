/**
 * This class contains class (static) methods
 * that will help you test the Picture class 
 * methods.  Uncomment the methods and the code
 * in the main to test.
 * 
 * @author Barbara Ericson 
 */
public class PictureTester
{
  /** Method to test zeroBlue */
  public static void testZeroBlue()
  {
    Picture beach = new Picture("beach.jpg");
    beach.explore();
    beach.zeroBlue();
    beach.explore();
  }
  
  /** Method to test mirrorVertical */
  public static void testMirrorVertical()
  {
    Picture caterpillar = new Picture("caterpillar.jpg");
    caterpillar.explore();
    caterpillar.mirrorVertical();
    caterpillar.explore();
  }
  
  /** Method to test mirrorTemple */
  public static void testMirrorTemple()
  {
    Picture temple = new Picture("temple.jpg");
    temple.explore();
    temple.mirrorTemple();
    temple.explore();
  }
  
  /** Method to test the collage method */
  public static void testCollage()
  {
    Picture canvas = new Picture("640x480.jpg");
    canvas.createCollage();
    canvas.explore();
  }
  
  /** Method to test edgeDetection */
  public static void testEdgeDetection()
  {
    Picture swan = new Picture("swan.jpg");
    swan.edgeDetection(10);
    swan.explore();
  }
  
  public static void testKeepOnlyBlue()
  {
	  Picture pic = new Picture("beach.jpg");
	  pic.explore();
	  pic.keepOnlyBlue();
	  pic.explore();
  }
  
  public static void testNegate()
  {
	  Picture pic = new Picture("beach.jpg");
	  pic.explore();
	  pic.negate();
	  pic.explore();
  }
  
  public static void testGrayscale()
  {
	  Picture pic = new Picture("beach.jpg");
	  pic.explore();
	  pic.grayscale();
	  pic.explore();
  }
  
  public static void testFixUnderwater()
  {
	  Picture pic = new Picture("water.jpg");
	  pic.explore();
	  pic.fixUnderwater();
	  pic.explore();
  }
  
  public static void testMirrorVerticalRightToLeft()
  {
    Picture caterpillar = new Picture("caterpillar.jpg");
    caterpillar.explore();
    caterpillar.mirrorVerticalRightToLeft();
    caterpillar.explore();
  }
  
  public static void testMirrorHorizontal()
  {
    Picture caterpillar = new Picture("redMotorcycle.jpg");
    caterpillar.explore();
    caterpillar.mirrorHorizontal();
    caterpillar.explore();
  }
  
  public static void testMirrorHorizontalBotToTop()
  {
    Picture caterpillar = new Picture("redMotorcycle.jpg");
    caterpillar.explore();
    caterpillar.mirrorHorizontalBotToTop();
    caterpillar.explore();
  }
  
  public static void testMirrorDiagonal()
  {
    Picture caterpillar = new Picture("beach.jpg");
    caterpillar.explore();
    caterpillar.mirrorDiagonal();
    caterpillar.explore();
  }
  
  public static void testMirrorArms()
  {
    Picture snowman = new Picture("snowman.jpg");
    snowman.explore();
    snowman.mirrorArms();
    snowman.explore();
  }
  
  public static void testMirrorGull()
  {
	  Picture gull = new Picture("seagull.jpg");
	  gull.explore();
	  gull.mirrorGull();
	  gull.explore();
  }
  
  public static void testCopy()
  {
	  Picture toPic = new Picture("beach.jpg");
	  Picture fromPic = new Picture("redMotorcycle.jpg");
	  toPic.explore();
	  toPic.copy(fromPic, 30, 100, 50, 200, 150, 300);
	  toPic.explore();
  }
  
  public static void testMyCollage()
  {
	  Picture basePic = new Picture("water.jpg");
	  basePic.fixUnderwater();
	  basePic.explore();
	  basePic.myCollage();
	  basePic.explore();
  }
  
  public static void testEdgeDetection2()
  {
	  Picture swan = new Picture("swan.jpg");
	  swan.explore();
	  swan.edgeDetection2(10);
	  swan.explore();
  }
  
  public static void testMyEdgeDetection()
  {
	  Picture swan = new Picture("swan.jpg");
	  swan.explore();
	  swan.myEdgeDetection(10);
	  swan.explore();
  }
  
  public static void testSharpen(int x, int y, int w, int h)
  {
	  //System.out.println("Name: Alan Zhu\nPeriod: 1\nDate: 4/24/18\nComputer Number: 26");
	  Picture redMoto = new Picture("redMotorcycle.jpg");
	  Picture message = new Picture("msg.jpg");
	  redMoto.explore();
	  redMoto.sharpen(x,y,w,h);
	  redMoto.explore();
  }
  
  public static void testEncodeDecode(){
	  Picture redMoto = new Picture("redMotorcycle.jpg");
	  Picture message = new Picture("msg.jpg");
	  redMoto.explore();
	  redMoto.explore();
	  redMoto.encode(message);
	  redMoto.explore();
	  Picture decoded = redMoto.decode();
	  decoded.explore();
  }
  
  /** Main method for testing.  Every class can have a main
    * method in Java */
  public static void main(String[] args)
  {
	  // uncomment a call here to run a test
	  // and comment out the ones you don't want
	  // to run
	  //testZeroBlue();
	  //testKeepOnlyBlue();
	  //testKeepOnlyRed();
	  //testKeepOnlyGreen();
	  //testNegate();
	  //testGrayscale();
	  //testFixUnderwater();
	  //testMirrorVertical();
	  //testMirrorVerticalRightToLeft();
	  //testMirrorHorizontal();
	  //testMirrorHorizontalBotToTop();
	  //testMirrorTemple();
	  //testMirrorArms();
	  //testMirrorGull();
	  //testMirrorDiagonal();
	  //testCollage();
	  //testCopy();
	  //testMyCollage();
	  //testEdgeDetection();
	  //testEdgeDetection2();
	  //testMyEdgeDetection();
	  //testChromakey();
	  //testEncodeAndDecode();
	  //testGetCountRedOverValue(250);
	  //testSetRedToHalfValueInTopHalf();
	  //testClearBlueOverValue(200);
	  //testGetAverageForColumn(0);
	  //testSharpen(50,50,500,400);
	  testEncodeDecode();
  }
}